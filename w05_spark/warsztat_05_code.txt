
print("pierwsze polecenie uruchomi context sparka")

dir(spark)

## ładujemy zbiór z S3
pan_tadeusz = spark.read.text("s3://kompleksowe-szkolenie-bigdata/warsztat_02/pan_tadeusz.txt")

## tworzymy tabelę tymczasową
pan_tadeusz.createOrReplaceTempView('pan_tadeusz_tabelka')

spark.sql("""select * from pan_tadeusz_tabelka""").show(20)

spark.sql("""select count(*) from pan_tadeusz_tabelka""").show()

pan_tadeusz.count()

pan_tadeusz_wyrazy = spark.sql("""select explode(split(value,' ')) from pan_tadeusz_tabelka""")

pan_tadeusz_wyrazy.show(10)

pan_tadeusz_wyrazy.distinct().count()

spark.sql("""select count(distinct wyrazy) from (select explode(split(value,' ')) as wyrazy from pan_tadeusz_tabelka)""").show()

pan_tadeusz.write.text("hdfs:///tmp/pan_tadeusz3")

users = spark.read.parquet('s3://kompleksowe-szkolenie-bigdata/stackoverflow/users_pq')

spark.read.parquet('s3://kompleksowe-szkolenie-bigdata/stackoverflow/users_pq').write.parquet("hdfs:///tmp/users_parquet")

users = spark.read.parquet("hdfs:///tmp/users_parquet")

users.createOrReplaceTempView('users_tabelka')

users.printSchema()

users.describe().show()

users.take(2)

users.select('id','displayname').take(5)

users.select('id','displayname').show(5)

cache_example=users.select('id','displayname','views').cache()

cache_example.show(5)

cache_example.show(5)

users.groupBy("location").agg({"location": "count"}).show()

users.groupBy("location").agg({"location": "count"}).orderBy('count(location)',ascending=0).show()

spark.sql("""select count(distinct location) from users_tabelka""").show()

users.select('location').dropDuplicates().count()

spark.sql("""select count(*) from users_tabelka where location != "" """).show()

spark.sql("""select displayname,upvotes from users_tabelka where upvotes > 100""").show()

users.select('displayname','upvotes').filter(users.upvotes > 100).show()

users.groupBy('reputation').agg({'upvotes':'mean','downvotes':'mean','reputation':'count'}).show()

users.orderBy(users.reputation.desc()).select('displayname',users.reputation).show(20)

users.orderBy(users.reputation, ascending=0).select(users.displayname,users.reputation).show()

users.withColumn('reputation_calculation', users.reputation *2).printSchema()

users.withColumn('reputation_calculation', users.reputation *2). \
    select('displayname','reputation','upvotes','reputation_calculation'). \
    show(10)

users.drop('views').printSchema()
